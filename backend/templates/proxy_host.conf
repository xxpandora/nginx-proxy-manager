{% include "_header_comment.conf" %}


{% if enabled %}

geo $white_list_{{ id }} {
    default deny;
	include /etc/nginx/conf.d/context/http/geo.conf.list;
	{{ forward_host }} allow;
    {% if access_list_id > 0 %}
    {% if access_list.items.length > 0 %}
    {% endif %}
    {% for client in clients.access_list %}
    {{- client.rule -}};
    {% endfor %}
    {% endif %}
	}

map $white_list_{{ id }} $limit_{{ id }} {
    allow     "";
    deny     $binary_remote_addr;
    }

# Rate Limit HTTP Request
limit_conn_zone $limit_{{ id }} zone=perip_limit_{{ id }}:10m;
limit_req_zone $limit_{{ id }} zone=dos_flood_limit_{{ id }}:10m rate=1r/s;

server {
  set $forward_scheme {{ forward_scheme }};
  set $server         "{{ forward_host }}";
  set $port           {{ forward_port }};

{% include "_listen.conf" %}
{% include "_certificates.conf" %}
{% include "_assets.conf" %}
{% include "_hsts.conf" %}
{% include "_forced_ssl.conf" %}

{% if allow_websocket_upgrade == 1 or allow_websocket_upgrade == true %}
proxy_set_header Upgrade $http_upgrade;
proxy_set_header Connection $http_connection;
proxy_http_version 1.1;
{% endif %}

# Log Settings
  access_log /data/logs/proxy-host-{{ id }}_access.log;
  error_log /data/logs/proxy-host-{{ id }}_error.log;

# Global Config
	include /etc/nginx/conf.d/global-config/*.conf;

{{ advanced_config }}

# static file
	location ~* .(jpg|jpeg|gif|png|ico|bmp|js|css|json|webp|ttf|woff|woff2)$ {

    # Proxy and Backend IP Config!
    include /etc/nginx/conf.d/include/proxy.conf;
	proxy_pass       $forward_scheme://$server:$port;
	}

{{ locations }}

{% if use_default_location %}

  location / {

    {% if access_list_id > 0 %}
    {% if access_list.items.length > 0 %}
    # Authorization
    auth_basic            "Authorization required";
    auth_basic_user_file  /data/access/{{ access_list_id }};

    {{ access_list.passauth }}
    {% endif %}

    # Access checks must...
    {% if access_list.satisfy %}
    {{ access_list.satisfy }};
    {% endif %}

    {% endif %}

{% include "_hsts.conf" %}

    {% if allow_websocket_upgrade == 1 or allow_websocket_upgrade == true %}
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection $http_connection;
    proxy_http_version 1.1;
    {% endif %}

    # Proxy Config!
    include /etc/nginx/conf.d/include/proxy.conf;

##### Firewall Rules #####
set $action 0;

{% if managed_waf == 1 or managed_waf == true %}

  # Managed Rate Limit Include
limit_conn perip_limit_{{ id }} 3;
limit_conn_status 444;

limit_req zone=dos_flood_limit_{{ id }} burst=1 nodelay;
limit_req_status 444;
		
############################ White List:
set $white_list_{{ id }}_access 0;
set $http_flood_block 0;

	if ($white_list_{{ id }} = 0) {
		set $white_list_{{ id }}_access 1;}
		
	if ($white_list_{{ id }}_access = 0) {
		set $http_flood_block 1;}
	
include /etc/nginx/conf.d/firewall-rules/firewall-rules.conf;

############################ Firewall Rule:

		#1# White List Access
if ($white_list_{{ id }}_access = 1) {
		set $action 0;}
		
		#2# Block HTTP Flood
if ($http_block = 12) {
		set $action 1;}

#		#3# Ban Bad Bot
#if ($ban_bad_bot = 1) {
#		set $action 1;}

		#4# Block Common Exploit 
if ($block_common_exploits = 1) {
		set $action 1;}

		#5# Block file injections
if ($block_file_injections = 1) {
		set $action 1;}

		#6# Block spam
if ($block_spam = 1) {
		set $action 1;}
		
		#7# Block SQL injections
if ($block_sql_injections = 1) {
		set $action 1;}
		
		#8# XmlRPC Block Client
if ($block_xml_rpc = 1) {
		set $action 1;}

##		#9# Search Query flood
##if ($search_control = 1) {
##		set $action 2;}

##### Block Spam IP and Country #####
		
	include /nginx/conf.d/context/http/asn-list/*.conf;
	include /nginx/conf.d/context/http/country-list/*.conf;

{% endif %}

{% include "under-attack.conf" %}		

##### Firewall Action #####
## Access Action 0
if ($action = 0) {	
	proxy_pass       $forward_scheme://$server:$port;
	}
	
## Block Action 1	
if ($action = 1) {	
	return 444;
	}	
  }
{% endif %}

  # Custom
  include /data/nginx/custom/server_proxy[.]conf;
}
{% endif %}
